import { useState } from "react";
import Navigation from "@/components/Navigation";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";

const Console = () => {
  const [jsCode, setJsCode] = useState("");
  const [output, setOutput] = useState<string[]>([]);
  const [selectedElement, setSelectedElement] = useState<string>("");

  const executeCode = () => {
    try {
      // –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Å—Ä–µ–¥—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
      const result = new Function(`
        const log = (msg) => ({ type: 'log', message: String(msg) });
        const error = (msg) => ({ type: 'error', message: String(msg) });
        const warn = (msg) => ({ type: 'warn', message: String(msg) });
        
        // –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö DevTools —Ñ—É–Ω–∫—Ü–∏–π
        window.$0 = document.querySelector('#console-demo-element');
        window.$1 = document.querySelector('.console-card');
        
        const result = (function() {
          ${jsCode}
        })();
        
        return result !== undefined ? String(result) : 'undefined';
      `)();
      
      setOutput(prev => [...prev, `> ${jsCode}`, `< ${result}`]);
    } catch (error) {
      setOutput(prev => [...prev, `> ${jsCode}`, `‚ùå Error: ${error.message}`]);
    }
    setJsCode("");
  };

  const generateError = () => {
    try {
      // –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      throw new Error("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è DevTools Console");
    } catch (error) {
      console.error("üö® –û—à–∏–±–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:", error);
      setOutput(prev => [...prev, "üö® –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ DevTools Console"]);
    }
  };

  const selectElement = (selector: string) => {
    try {
      const element = document.querySelector(selector);
      if (element) {
        setSelectedElement(selector);
        console.log("Selected element:", element);
        setOutput(prev => [...prev, `–≠–ª–µ–º–µ–Ω—Ç –≤—ã–±—Ä–∞–Ω: ${selector}`, `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ DevTools Console`]);
      }
    } catch (error) {
      setOutput(prev => [...prev, `–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞: ${error.message}`]);
    }
  };

  const clearOutput = () => {
    setOutput([]);
    console.clear();
  };

  const monitorElement = () => {
    const element = document.querySelector('#console-demo-element');
    if (element) {
      // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–±—ã—Ç–∏–π
      ['click', 'mouseover', 'mouseout'].forEach(eventType => {
        element.addEventListener(eventType, (e) => {
          console.log(`Event monitored: ${eventType} on`, e.target);
        });
      });
      setOutput(prev => [...prev, "–°–æ–±—ã—Ç–∏—è –º–æ–Ω–∏—Ç–æ—Ä—è—Ç—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DevTools Console"]);
    }
  };

  return (
    <div className="min-h-screen bg-background">
      <Navigation />
      
      <div className="container mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold mb-4 bg-gradient-primary bg-clip-text text-transparent">
            üí¨ Console - –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ JavaScript
          </h1>
          <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
            –í—ã–ø–æ–ª–Ω—è–π—Ç–µ JavaScript –∫–æ–¥, —Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å DOM, –∏–∑—É—á–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç—ã –∏ –æ—Ç–ª–∞–∂–∏–≤–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          </p>
        </div>

        {/* Instructions */}
        <Card className="mb-8 bg-gradient-card border-devtools-blue/20">
          <CardHeader>
            <CardTitle className="text-devtools-blue">üìã –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã Console</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-3">
                <div className="bg-muted/50 p-3 rounded-lg font-mono text-sm">
                  <div className="text-devtools-green">document.querySelector('.class')</div>
                  <div className="text-muted-foreground">–í—ã–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É</div>
                </div>
                <div className="bg-muted/50 p-3 rounded-lg font-mono text-sm">
                  <div className="text-devtools-green">$0, $1, $2</div>
                  <div className="text-muted-foreground">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã</div>
                </div>
                <div className="bg-muted/50 p-3 rounded-lg font-mono text-sm">
                  <div className="text-devtools-green">console.log(), console.error()</div>
                  <div className="text-muted-foreground">–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª—å</div>
                </div>
              </div>
              <div className="space-y-3">
                <div className="bg-muted/50 p-3 rounded-lg font-mono text-sm">
                  <div className="text-devtools-orange">monitorEvents($0, 'click')</div>
                  <div className="text-muted-foreground">–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–±—ã—Ç–∏–π —ç–ª–µ–º–µ–Ω—Ç–∞</div>
                </div>
                <div className="bg-muted/50 p-3 rounded-lg font-mono text-sm">
                  <div className="text-devtools-orange">copy()</div>
                  <div className="text-muted-foreground">–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤ –±—É—Ñ–µ—Ä</div>
                </div>
                <div className="bg-muted/50 p-3 rounded-lg font-mono text-sm">
                  <div className="text-devtools-orange">clear()</div>
                  <div className="text-muted-foreground">–û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Å–æ–ª–∏</div>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        <div className="grid lg:grid-cols-2 gap-8">
          {/* JavaScript Executor */}
          <Card className="bg-gradient-card shadow-card">
            <CardHeader>
              <CardTitle className="text-devtools-purple">‚ö° JavaScript –ü–µ—Å–æ—á–Ω–∏—Ü–∞</CardTitle>
              <CardDescription>–í—ã–ø–æ–ª–Ω–∏—Ç–µ JavaScript –∫–æ–¥ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <Textarea
                value={jsCode}
                onChange={(e) => setJsCode(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ JavaScript –∫–æ–¥..."
                className="font-mono min-h-[120px]"
                rows={5}
              />
              
              <div className="flex gap-2">
                <Button onClick={executeCode} className="flex-1">
                  –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–¥
                </Button>
                <Button onClick={clearOutput} variant="outline">
                  –û—á–∏—Å—Ç–∏—Ç—å
                </Button>
              </div>

              {/* Output */}
              <div className="bg-muted/30 rounded-lg p-4 min-h-[200px] font-mono text-sm">
                <div className="text-devtools-green mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</div>
                {output.length === 0 ? (
                  <div className="text-muted-foreground">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å...</div>
                ) : (
                  <div className="space-y-1">
                    {output.map((line, index) => (
                      <div key={index} className={
                        line.startsWith('>') ? 'text-foreground' :
                        line.startsWith('‚ùå') ? 'text-destructive' :
                        line.startsWith('üö®') ? 'text-devtools-orange' :
                        'text-devtools-blue'
                      }>
                        {line}
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </CardContent>
          </Card>

          {/* Interactive Elements */}
          <Card className="bg-gradient-card shadow-card">
            <CardHeader>
              <CardTitle className="text-devtools-green">üéØ –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</CardTitle>
              <CardDescription>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–≤–æ–∏—Ö Console –∫–æ–º–∞–Ω–¥–∞—Ö</CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              {/* Demo Element */}
              <div 
                id="console-demo-element"
                className="console-card p-4 rounded-lg bg-gradient-accent/20 border border-accent/30 cursor-pointer transition-smooth hover:shadow-glow"
                onClick={() => console.log('Demo element clicked!')}
              >
                <h4 className="font-semibold text-accent">–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç</h4>
                <p className="text-sm text-muted-foreground">
                  ID: console-demo-element<br/>
                  Class: console-card
                </p>
              </div>

              {/* Quick Actions */}
              <div className="space-y-3">
                <h5 className="font-semibold">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</h5>
                
                <Button 
                  onClick={() => selectElement('#console-demo-element')}
                  variant="outline" 
                  className="w-full"
                >
                  –í—ã–±—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç –ø–æ ID
                </Button>
                
                <Button 
                  onClick={generateError}
                  variant="outline" 
                  className="w-full text-devtools-red border-devtools-red/30 hover:bg-devtools-red/10"
                >
                  –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É
                </Button>
                
                <Button 
                  onClick={monitorElement}
                  variant="outline" 
                  className="w-full"
                >
                  –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å —Å–æ–±—ã—Ç–∏—è
                </Button>

                <Button 
                  onClick={() => {
                    console.table([
                      { name: 'Elements', shortcut: 'Ctrl+Shift+C' },
                      { name: 'Console', shortcut: 'Ctrl+Shift+J' },
                      { name: 'Network', shortcut: 'Ctrl+Shift+E' }
                    ]);
                    setOutput(prev => [...prev, "–¢–∞–±–ª–∏—Ü–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ DevTools Console"]);
                  }}
                  variant="outline" 
                  className="w-full"
                >
                  –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É
                </Button>
              </div>

              {/* Quick Commands */}
              <div className="space-y-2">
                <h5 className="font-semibold text-devtools-blue">üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã:</h5>
                <div className="text-xs space-y-1 font-mono bg-muted/50 p-3 rounded-lg">
                  <div>$0.style.border = '2px solid red'</div>
                  <div>$0.textContent = '–ò–∑–º–µ–Ω–µ–Ω–æ!'</div>
                  <div>console.log($0)</div>
                  <div>monitorEvents($0, 'click')</div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Tips */}
        <Card className="mt-8 bg-gradient-card shadow-card">
          <CardHeader>
            <CardTitle className="text-devtools-orange">üí° –°–æ–≤–µ—Ç—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å Console</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid md:grid-cols-3 gap-6">
              <div className="space-y-2">
                <h4 className="font-semibold text-devtools-blue">–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ</h4>
                <p className="text-sm text-muted-foreground">
                  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Tab –¥–ª—è –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ –∏ —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–æ–≤
                </p>
              </div>
              <div className="space-y-2">
                <h4 className="font-semibold text-devtools-green">–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è</h4>
                <p className="text-sm text-muted-foreground">
                  –§–∏–ª—å—Ç—Ä—É–π—Ç–µ –ª–æ–≥–∏ –ø–æ —Ç–∏–ø—É (Errors, Warnings, Info) –≤ –ø–∞–Ω–µ–ª–∏ Console
                </p>
              </div>
              <div className="space-y-2">
                <h4 className="font-semibold text-devtools-purple">–ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∫–æ–¥</h4>
                <p className="text-sm text-muted-foreground">
                  Shift+Enter –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default Console;