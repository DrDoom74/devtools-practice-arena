import { useState, useEffect } from "react";
import Navigation from "@/components/Navigation";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";

const Console = () => {
  const [output, setOutput] = useState<string[]>([]);
  const [selectedElement, setSelectedElement] = useState<string>("");
  
  // Async testing states
  const [notificationMessage, setNotificationMessage] = useState("");
  const [currentTime, setCurrentTime] = useState("");
  const [timerActive, setTimerActive] = useState(false);
  const [intervalId, setIntervalId] = useState<NodeJS.Timeout | null>(null);

  // Async testing functions
  const showNotificationAfterDelay = () => {
    setNotificationMessage(""); // Reset message
    console.log("‚è∞ –ó–∞–ø—É—â–µ–Ω —Ç–∞–π–º–µ—Ä –Ω–∞ 2 —Å–µ–∫—É–Ω–¥—ã");
    
    setTimeout(() => {
      setNotificationMessage("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—è–≤–∏–ª–æ—Å—å!");
      console.log("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã");
    }, 2000);
  };

  const startTimer = () => {
    if (timerActive) return;
    
    setTimerActive(true);
    setCurrentTime(new Date().toLocaleTimeString());
    console.log("‚è∞ –¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω");
    
    const id = setInterval(() => {
      const newTime = new Date().toLocaleTimeString();
      setCurrentTime(newTime);
      console.log("üïê –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ:", newTime);
    }, 1000);
    
    setIntervalId(id);
  };

  const stopTimer = () => {
    if (intervalId) {
      clearInterval(intervalId);
      setIntervalId(null);
      setTimerActive(false);
      console.log("‚èπÔ∏è –¢–∞–π–º–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
      setCurrentTime("–¢–∞–π–º–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.");
    }
  };

  // Cleanup interval on unmount
  useEffect(() => {
    return () => {
      if (intervalId) {
        clearInterval(intervalId);
      }
    };
  }, [intervalId]);

  const generateError = () => {
    try {
      // –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      throw new Error("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è DevTools Console");
    } catch (error) {
      console.error("üö® –û—à–∏–±–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:", error);
      setOutput(prev => [...prev, "üö® –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ DevTools Console"]);
    }
  };

  const selectElement = (selector: string) => {
    try {
      const element = document.querySelector(selector);
      if (element) {
        setSelectedElement(selector);
        console.log("Selected element:", element);
        setOutput(prev => [...prev, `–≠–ª–µ–º–µ–Ω—Ç –≤—ã–±—Ä–∞–Ω: ${selector}`, `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ DevTools Console`]);
      }
    } catch (error) {
      setOutput(prev => [...prev, `–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞: ${error.message}`]);
    }
  };

  const clearOutput = () => {
    setOutput([]);
    console.clear();
  };

  const monitorElement = () => {
    const element = document.querySelector('#console-demo-element');
    if (element) {
      // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–±—ã—Ç–∏–π
      ['click', 'mouseover', 'mouseout'].forEach(eventType => {
        element.addEventListener(eventType, (e) => {
          console.log(`Event monitored: ${eventType} on`, e.target);
        });
      });
      setOutput(prev => [...prev, "–°–æ–±—ã—Ç–∏—è –º–æ–Ω–∏—Ç–æ—Ä—è—Ç—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DevTools Console"]);
    }
  };

  return (
    <div className="min-h-screen bg-background">
      <Navigation />
      
      <div className="container mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold mb-4 bg-gradient-primary bg-clip-text text-transparent">
            üí¨ Console - –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ JavaScript
          </h1>
          <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
            –í—ã–ø–æ–ª–Ω—è–π—Ç–µ JavaScript –∫–æ–¥, —Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å DOM, –∏–∑—É—á–∞–π—Ç–µ –∏ –æ—Ç–ª–∞–∂–∏–≤–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç—ã
          </p>
        </div>

        {/* Instructions */}
        <Card className="mb-8 bg-gradient-card border-devtools-blue/20">
          <CardHeader>
            <CardTitle className="text-devtools-blue">üìã –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã Console</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-3">
                <div className="bg-muted/50 p-3 rounded-lg font-mono text-sm">
                  <div className="text-devtools-green">document.querySelector('.class')</div>
                  <div className="text-muted-foreground">–í—ã–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É</div>
                </div>
                <div className="bg-muted/50 p-3 rounded-lg font-mono text-sm">
                  <div className="text-devtools-green">$0, $1, $2</div>
                  <div className="text-muted-foreground">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã</div>
                </div>
                <div className="bg-muted/50 p-3 rounded-lg font-mono text-sm">
                  <div className="text-devtools-green">console.log(), console.error()</div>
                  <div className="text-muted-foreground">–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª—å</div>
                </div>
              </div>
              <div className="space-y-3">
                <div className="bg-muted/50 p-3 rounded-lg font-mono text-sm">
                  <div className="text-devtools-orange">monitorEvents($0, 'click')</div>
                  <div className="text-muted-foreground">–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–±—ã—Ç–∏–π —ç–ª–µ–º–µ–Ω—Ç–∞</div>
                </div>
                <div className="bg-muted/50 p-3 rounded-lg font-mono text-sm">
                  <div className="text-devtools-orange">copy()</div>
                  <div className="text-muted-foreground">–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤ –±—É—Ñ–µ—Ä</div>
                </div>
                <div className="bg-muted/50 p-3 rounded-lg font-mono text-sm">
                  <div className="text-devtools-orange">clear()</div>
                  <div className="text-muted-foreground">–û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Å–æ–ª–∏</div>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        <div className="grid lg:grid-cols-2 gap-8">
          {/* Async Testing */}
          <Card className="bg-gradient-card shadow-card">
            <CardHeader>
              <CardTitle className="text-devtools-purple">‚è±Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞</CardTitle>
              <CardDescription>–ü—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å setTimeout, setInterval –∏ –æ—Ç–ª–∞–¥–∫–∏</CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              {/* Notification Test */}
              <div className="space-y-3">
                <h4 className="font-semibold text-devtools-blue">üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π</h4>
                <Button 
                  onClick={showNotificationAfterDelay}
                  variant="outline" 
                  className="w-full"
                >
                  –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (—á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã)
                </Button>
                
                {notificationMessage && (
                  <div className="bg-devtools-green/10 border border-devtools-green/30 rounded-lg p-3 text-center">
                    <span className="text-devtools-green font-semibold">{notificationMessage}</span>
                  </div>
                )}
                
                <div className="bg-muted/50 p-3 rounded-lg text-xs">
                  <div className="text-devtools-blue font-semibold mb-1">QA-—á–µ–∫–ª–∏—Å—Ç:</div>
                  <ul className="text-muted-foreground space-y-1">
                    <li>‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–≥–æ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã</li>
                    <li>‚Ä¢ –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∫–ª–∏–∫–µ —Ç–µ–∫—Å—Ç —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∏ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∑–∞–Ω–æ–≤–æ</li>
                    <li>‚Ä¢ –í DevTools ‚Üí Console –Ω–µ—Ç –æ—à–∏–±–æ–∫</li>
                    <li>‚Ä¢ –ú–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å breakpoint –Ω–∞ —Å—Ç—Ä–æ—á–∫–µ setTimeout</li>
                  </ul>
                </div>
              </div>

              {/* Timer Test */}
              <div className="space-y-3">
                <h4 className="font-semibold text-devtools-orange">üïê –ò–Ω—Ç–µ—Ä–≤–∞–ª —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏</h4>
                
                <div className="flex gap-2">
                  <Button 
                    onClick={startTimer}
                    disabled={timerActive}
                    variant="outline" 
                    className="flex-1"
                  >
                    –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä
                  </Button>
                  <Button 
                    onClick={stopTimer}
                    disabled={!timerActive}
                    variant="outline" 
                    className="flex-1"
                  >
                    –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
                  </Button>
                </div>

                <div className="bg-muted/30 rounded-lg p-4 text-center font-mono">
                  <div className="text-sm text-muted-foreground mb-1">–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è:</div>
                  <div className="text-lg font-semibold text-devtools-green">
                    {currentTime || "–¢–∞–π–º–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"}
                  </div>
                  <div className="text-xs text-muted-foreground mt-2">
                    –°—Ç–∞—Ç—É—Å: {timerActive ? "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" : "üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"}
                  </div>
                </div>
                
                <div className="bg-muted/50 p-3 rounded-lg text-xs">
                  <div className="text-devtools-orange font-semibold mb-1">QA-—á–µ–∫–ª–∏—Å—Ç:</div>
                  <ul className="text-muted-foreground space-y-1">
                    <li>‚Ä¢ –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É</li>
                    <li>‚Ä¢ –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" –æ–Ω–æ –ø–µ—Ä–µ—Å—Ç–∞—ë—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è</li>
                    <li>‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ DevTools ‚Üí Network, —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è</li>
                    <li>‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ Console, —á—Ç–æ –Ω–µ—Ç setInterval –±–µ–∑ clearInterval</li>
                  </ul>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Interactive Elements */}
          <Card className="bg-gradient-card shadow-card">
            <CardHeader>
              <CardTitle className="text-devtools-green">üéØ –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</CardTitle>
              <CardDescription>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–≤–æ–∏—Ö Console –∫–æ–º–∞–Ω–¥–∞—Ö</CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              {/* Demo Element */}
              <div 
                id="console-demo-element"
                className="console-card p-4 rounded-lg bg-gradient-accent/20 border border-accent/30 cursor-pointer transition-smooth hover:shadow-glow"
                onClick={() => console.log('Demo element clicked!')}
              >
                <h4 className="font-semibold text-accent">–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç</h4>
                <p className="text-sm text-muted-foreground">
                  ID: console-demo-element<br/>
                  Class: console-card
                </p>
              </div>

              {/* Quick Actions */}
              <div className="space-y-3">
                <h5 className="font-semibold">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</h5>
                
                <Button 
                  onClick={() => selectElement('#console-demo-element')}
                  variant="outline" 
                  className="w-full"
                >
                  –í—ã–±—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç –ø–æ ID
                </Button>
                
                <Button 
                  onClick={generateError}
                  variant="outline" 
                  className="w-full text-devtools-red border-devtools-red/30 hover:bg-devtools-red/10"
                >
                  –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É
                </Button>
                
                <Button 
                  onClick={monitorElement}
                  variant="outline" 
                  className="w-full"
                >
                  –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å —Å–æ–±—ã—Ç–∏—è
                </Button>

                <Button 
                  onClick={() => {
                    console.table([
                      { name: 'Elements', shortcut: 'Ctrl+Shift+C' },
                      { name: 'Console', shortcut: 'Ctrl+Shift+J' },
                      { name: 'Network', shortcut: 'Ctrl+Shift+E' }
                    ]);
                    setOutput(prev => [...prev, "–¢–∞–±–ª–∏—Ü–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ DevTools Console"]);
                  }}
                  variant="outline" 
                  className="w-full"
                >
                  –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É
                </Button>
                <p className="text-xs text-muted-foreground text-center mt-1">
                  –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Å –≥–æ—Ä—è—á–∏–º–∏ –∫–ª–∞–≤–∏—à–∞–º–∏ DevTools –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ (F12)
                </p>
              </div>

              {/* Quick Commands */}
              <div className="space-y-2">
                <h5 className="font-semibold text-devtools-blue">üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã:</h5>
                <div className="text-xs space-y-1 font-mono bg-muted/50 p-3 rounded-lg">
                  <div>$0.style.border = '2px solid red'</div>
                  <div>$0.textContent = '–ò–∑–º–µ–Ω–µ–Ω–æ!'</div>
                  <div>console.log($0)</div>
                  <div>monitorEvents($0, 'click')</div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Tips */}
        <Card className="mt-8 bg-gradient-card shadow-card">
          <CardHeader>
            <CardTitle className="text-devtools-orange">üí° –°–æ–≤–µ—Ç—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å Console</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid md:grid-cols-3 gap-6">
              <div className="space-y-2">
                <h4 className="font-semibold text-devtools-blue">–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ</h4>
                <p className="text-sm text-muted-foreground">
                  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Tab –¥–ª—è –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ –∏ —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–æ–≤
                </p>
              </div>
              <div className="space-y-2">
                <h4 className="font-semibold text-devtools-green">–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è</h4>
                <p className="text-sm text-muted-foreground">
                  –§–∏–ª—å—Ç—Ä—É–π—Ç–µ –ª–æ–≥–∏ –ø–æ —Ç–∏–ø—É (Errors, Warnings, Info) –≤ –ø–∞–Ω–µ–ª–∏ Console
                </p>
              </div>
              <div className="space-y-2">
                <h4 className="font-semibold text-devtools-purple">–ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∫–æ–¥</h4>
                <p className="text-sm text-muted-foreground">
                  Shift+Enter –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default Console;